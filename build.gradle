buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}


plugins {
	id "java"
	id "idea"
	id "eclipse"
	id "application"
	id "jacoco"
	id "maven"
	id "maven-publish"
	id "com.github.kt3k.coveralls" version "2.4.0"
    id "com.jfrog.bintray" version "1.3.1"
}

publishing {
	publications {
		BintrayPublication(MavenPublication) {
			from components.java
			groupId 'uniba-dsg'
            		artifactId 'bpp'
            		version '1.0.0'
		}
	}
}

bintray {   
    user = 'lenhard'
    key = 'bintray_api_key'
	publications = ['BintrayPublication']
    pkg {
        repo = 'bpp'
        name = 'bpp'
        userOrg = 'uniba-dsg'
        licenses = ['LGPL-3.0']
        vcsUrl = 'https://github.com/uniba-dsg/bpp.git'
		version {
            name = '1.0.0-Final'
            desc = 'BPEL Portability Profile 1.0.0 final'
            vcsTag = 'v1.0.0'
        }
    }
}

mainClassName = "bpp.BPP"

repositories {
	jcenter()
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'src/main/generated'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
		}
	}
}

dependencies {
	compile 'net.sf.saxon:Saxon-HE:9.6.+'
	testCompile group: 'junit', name: 'junit', version: '4.+'
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.6'
}

run {
	if(project.hasProperty('args')){
		args project.args.split('\\s+')
	}
}

task profile (type: JavaExec, dependsOn: build){
    description = 'Builds the test assertion document'
    classpath = sourceSets.main.runtimeClasspath
    main = "bpp.util.WSIProfileDocSerializer"
}

task latex (type: JavaExec, dependsOn: build){
    description = 'Builds LaTeX tables for all test assertions'
    classpath = sourceSets.main.runtimeClasspath
    main = "bpp.util.LatexSerializer"
}

jar {
   exclude('testfiles')
   exclude('mappings')
   exclude('language-features')
   exclude('ProfileDoc-2.0.xsd')
   exclude('ProfileMarkup-2.0.xsd')
   exclude('wsi-report.xsd')
   exclude('xml.xsd')
   exclude('bpp/executables/FileAnalyzerTests*')
   exclude('bpp/testrunner/TestRunner*')
   manifest { attributes 'Main-Class': mainClassName }
   from ( configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } ) {
   	    exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
   }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
        afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'org/ws_i/**')
        })
    }
}
